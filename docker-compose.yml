version: '3'

services:
    #PHP Service
    app:
        build:
            context: ./docker-config/app
            dockerfile: Dockerfile
        image: php_service
        container_name: app
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
            working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker-config/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network
        
    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "88:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./docker-config/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    #MySQL Service
    db:
        image: mysql
        command: --default-authentication-plugin=mysql_native_password
        container_name: db
        restart: unless-stopped
        tty: true
        ports:
            - "33061:3306"
        # volumes:
        #     - ./docker-volumes-data/db:/var/lib/mysql
        #     - ./docker-config/mysql/my.cnf:/etc/mysql/my.cnf
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: timiduka
            MYSQL_PASSWORD: qwerty12345
            MYSQL_ROOT_PASSWORD: qwerty12345
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - app-network

    #PHPMyAdmin Service
    phpmyadmin:
        container_name: phpmyadmin
        image: phpmyadmin/phpmyadmin
        ports:
            - "7000:80"
        links:
            - db:db
        environment:
            MYSQL_USER: timiduka
            MYSQL_PASSWORD: qwerty12345
            MYSQL_ROOT_PASSWORD: qwerty12345
            UPLOAD_LIMIT: 3000000000
        networks:
            - app-network
    
    redis:
        container_name: 'redis'
        image: 'redis'
        ports:
            - '6379:6379'
        volumes:
            - ./docker-volumes-data/redis:/data

#Docker Networks
networks:
    app-network:
        driver: bridge
            
#Volumes
volumes:
    lbdata:
        driver: local